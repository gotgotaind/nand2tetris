// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field int len;
    field int maxlen;
    field array str;
    
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        // zero capacity string should be supported
        // so maybe it's just ok to not initialyse str in this case?
        let maxlen=maxLength+1;
        if ( maxlen > 0 ) {
            let str = Array.new(maxlen);
        }
        let len=0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do Output.printString("In dispose0 ");
        do Output.println();
        // zero capacity string should be supported
        // I have decided not to initalize str in this case
        // So I should not try to dispose of it
        if ( maxlen > 0 ) {
            do str.dispose();
        }
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return len;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let str[j]=c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        if ( len = maxlen ) {
            do Sys.error(4001);
        }
        let str[len]=c;
        let len=len+1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        if( len = 0 ) {
            do Sys.error(4000);
        }
        let len=len-1;
        let str[len]=0;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        return 5;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
